---
// Componente para la sección de Acceso Multiplataforma (Mejorado)
import { Icon } from 'astro-icon/components';

// Definimos los datos de las plataformas aquí para un fácil mantenimiento
const platforms = [
  {
    title: 'Aplicaciones de Escritorio',
    icon: 'mdi:desktop-classic',
  },
  {
    title: 'Acceso Web',
    icon: 'mdi:web',
  },
  {
    title: 'Dispositivos Móviles',
    icon: 'mdi:cellphone-link',
  },
  {
    title: 'Integración Industrial',
    icon: 'mdi:cogs',
  }
];
---

<section class="bg-gray-50 py-16 lg:py-24 relative overflow-hidden section-with-pattern">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="text-center mb-12 fade-in-element">
      <h2 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">Acceso y Control Sin Fronteras</h2>
      <p class="text-lg lg:text-xl text-gray-600 max-w-3xl mx-auto">
        Nuestras soluciones garantizan que tus datos y controles estén disponibles donde los necesites, a través de interfaces intuitivas y seguras.
      </p>
    </div>
    
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
      {platforms.map((platform, index) => (
        <div class="text-center fade-in-element" style={`transition-delay: ${index * 100}ms;`}>
          <div class="bg-white rounded-xl p-6 shadow-lg h-full card-hover">
            <div class="w-20 h-20 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center mx-auto mb-4 text-white shadow-lg">
              <Icon name={platform.icon} class="h-10 w-10" />
            </div>
            <h3 class="font-semibold text-lg text-gray-900">{platform.title}</h3>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .section-with-pattern {
    background-image: radial-gradient(circle at 1px 1px, #e5e7eb 1px, transparent 0);
    background-size: 20px 20px;
  }
  
  .card-hover { 
    transition: all 0.3s ease; 
  }
  .card-hover:hover {
    transform: translateY(-8px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
  }
  
  .fade-in-element {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .fade-in-element.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // El script de animación no necesita cambios
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries, observerInstance) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('is-visible');
          observerInstance.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    const elementsToAnimate = document.querySelectorAll('.fade-in-element');
    elementsToAnimate.forEach(el => {
      observer.observe(el);
    });
  });
</script>