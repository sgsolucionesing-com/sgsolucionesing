---
// SuccessCasesModal.astro (Con correcciones de TypeScript)
import { slides } from '../data/casos-exito.js';
import { Icon } from 'astro-icon/components';

// Helper function para obtener la URL de la imagen
function getImageSrc(imageSrc: any): string {
  if (typeof imageSrc === 'string') {
    return imageSrc;
  }
  if (imageSrc && typeof imageSrc === 'object' && imageSrc.src) {
    return imageSrc.src;
  }
  return '';
}
---
<div id="success-modal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-[999] hidden flex items-center justify-center p-4 sm:p-8 md:p-12">
  <div class="w-full h-full relative bg-gray-900/50 rounded-2xl border border-white/10 text-white flex flex-col">
    <button id="close-modal-btn" class="absolute top-3 right-3 text-white bg-black/50 rounded-full w-10 h-10 flex items-center justify-center z-50 hover:bg-primary transition-colors" aria-label="Cerrar">
      <Icon name="mdi:close" class="w-6 h-6" />
    </button>
    <section class="splide modal-splide h-full">
      <div class="splide__track h-full">
        <ul class="splide__list h-full">
          {slides.map(slide => (
            <li class="splide__slide">
              <div class="inner">
                <header class="header">
                  <img src="/casos_logo.svg" alt="Logo SyG" class="h-12 w-auto">
                  <span class="text-2xl text-gray-600 font-light mx-3">|</span>
                  <h1 class="text-2xl md:text-3xl font-bold" set:html={slide.subtitle || slide.title}></h1>
                </header>
                {slide.subtitle && ( <div class="section-title"> <h2 class="!text-white" set:html={slide.title}></h2> <div class="line-divider"></div> <p>{slide.description}</p> </div> )}
                <div class="block">
                  {!slide.subtitle && !slide.isContact && <p class="desc">{slide.description}</p>}
                  {slide.isContact ? ( <div class="text-center pt-8 flex flex-col items-center justify-center h-full"> <h3 class="text-xl md:text-2xl font-semibold text-cyan mb-2">SyG Soluciones de Ingeniería</h3> <p class="text-base md:text-lg max-w-3xl mx-auto mb-8">{slide.description}</p> <p class="text-lg mb-4">Contáctanos</p> <div class="flex justify-center gap-4 flex-wrap"> <a href="mailto:informacion@sgsolucionesing.com" class="contact-icon bg-cyan/20"><Icon name="mdi:email" class="text-cyan h-6 w-6"/></a> <a href="https://wa.me/573243025107" target="_blank" class="contact-icon bg-green-500"><Icon name="mdi:whatsapp" class="text-white h-7 w-7"/></a> <a href="https://www.instagram.com/sgsolucionesing/" target="_blank" class="contact-icon bg-pink-600"><Icon name="mdi:instagram" class="text-white h-7 w-7"/></a> </div> <div class="mt-10"> <a href="/" class="border border-white/50 text-white/80 px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-black transition-all duration-300">Volver a la Página Principal</a> </div> <p class="text-sm text-gray-400 max-w-xl mx-auto mt-6" set:html={slide.footerText}></p> </div> ) : ( <div class:list={["grid", {"grid-v": slide.images[0].type === 'vertical', "grid-h": slide.images.length > 1 ? 'two-cols' : ''}]}> {slide.images.map(image => { const imageClass = image.type === 'featured' ? 'img-featured' : (image.type === 'vertical' ? 'img-v' : 'img-h'); return <img class={imageClass} src={getImageSrc(image.src)} alt={slide.title} loading="lazy" />; })} </div> )}
                </div>
              </div>
            </li>
          ))}
        </ul>
      </div>
    </section>
  </div>
</div>

<script>
  import Splide from '@splidejs/splide';
  import type { Splide as SplideType } from '@splidejs/splide';
  import '@splidejs/splide/css/core';

  let modalSplide: SplideType | null = null;

  function initializeModalCarousel(startSlide = 0) {
    const splideElement = document.querySelector('.modal-splide') as HTMLElement;
    if (!splideElement) return;
    
    if ((splideElement as any).splide) {
      (splideElement as any).splide.destroy();
    }
    
    modalSplide = new Splide(splideElement, {
      type: 'loop',
      start: startSlide,
      autoplay: true,
      interval: 8000,
      keyboard: 'global',
      arrows: true,
      pagination: true,
    });

    modalSplide.on('moved', (newIndex) => {
      // FIX: Añadimos las comprobaciones que pide TypeScript
      if (modalSplide) { // Primero, nos aseguramos que el carrusel exista
        const slideComponent = modalSplide.Components.Slides.getAt(newIndex);
        // Segundo, nos aseguramos que el slide exista antes de usarlo
        if (slideComponent) {
          const activeSlide = slideComponent.slide as HTMLElement;
          activeSlide.scrollTop = 0;
        }
      }
    });

    modalSplide.mount();
  }
  
  document.addEventListener('modal-opened', (event) => {
    const startSlide = (event as CustomEvent).detail?.slideIndex ?? 0;
    initializeModalCarousel(startSlide);
  });
</script>

<style is:global>
  /* El CSS no necesita cambios */
</style>
